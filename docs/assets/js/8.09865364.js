(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{754:function(t,s,e){t.exports=e.p+"assets/img/2021-08-01_16-30.4de2fe82.png"},769:function(t,s,e){"use strict";e.r(s);var a=e(50),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"go实现websocket服务踩坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go实现websocket服务踩坑"}},[t._v("#")]),t._v(" go实现websocket服务踩坑")]),t._v(" "),a("h3",{attrs:{id:"起因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起因"}},[t._v("#")]),t._v(" 起因")]),t._v(" "),a("p",[t._v("最近在用写一个websocket订阅的服务，需求是用户可以通过websocket连接实时获取数据更新（防止用户内网的webhook访问不到而提出的解决方案）。由于golang"),a("code",[t._v("x/net")]),t._v("包下的websocket库"),a("a",{attrs:{href:"https://github.com/golang/go/issues/18152",target:"_blank",rel:"noopener noreferrer"}},[t._v("维护不善"),a("OutboundLink")],1),t._v("，只能将目光放在第三方库上，自然就选了github上星星最多的"),a("code",[t._v("gorilla/websocket")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"踩坑记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑记录"}},[t._v("#")]),t._v(" 踩坑记录")]),t._v(" "),a("ul",[a("li",[t._v("对websocket协议支持问题")])]),t._v(" "),a("p",[t._v("对于我这种最基础的需求，我天真地认为随便一个websocket库就已经后我用了，开始照官方给的示例写的客户端和服务端看起来很好，api调用也很简单。之后我的改动也一直在用示例客户端测试，都一切正常。直到我写完脑子一热网上随便搜了一个websocket在线测试（就像下面这样）试了一下。。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(754),alt:""}})]),t._v(" "),a("p",[t._v("然后我发现这样的在线测试没有一个能连上我的服务，统一报错是"),a("code",[t._v("gorilla/websocket")]),t._v("库不支持带"),a("code",[t._v("Sec-Websocket-Extensions")]),t._v("Header的连接。之后我用postman和python里随便一个websocket库测试结果也是一样。"),a("strong",[t._v("问题来了")]),t._v("。")]),t._v(" "),a("p",[t._v("我去找了"),a("a",{attrs:{href:"https://datatracker.ietf.org/doc/html/rfc6455#section-11.3.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("rfc6455"),a("OutboundLink")],1),t._v("中 对"),a("code",[t._v("Sec-Websocket-Extensions")]),t._v("头部信息的描述，在我的工地英语看来这个头部作用应该是客户端与服务端协商协议扩展的，由客户端发出希望使用的扩展，之后服务器回应支持的扩展，就像HTTP中那些协商报头的流程一样。")]),t._v(" "),a("p",[t._v("之后我又去看了"),a("code",[t._v("gorilla/websocket")]),t._v("的源码，下面是"),a("a",{attrs:{href:"https://github.com/gorilla/websocket/blob/master/server.go#L142",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体实现"),a("OutboundLink")],1),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Upgrader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Upgrade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" responseHeader http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badHandshake "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"websocket: the client is not using the websocket protocol: "')]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" responseHeader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sec-Websocket-Extensions"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returnError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusInternalServerError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"websocket: application specific 'Sec-WebSocket-Extensions' headers are unsupported\"")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("？？？遇到带"),a("code",[t._v("Sec-Websocket-Extensions")]),t._v("Header的连接直接丢弃了？")]),t._v(" "),a("p",[t._v("我在github上找到"),a("a",{attrs:{href:"https://github.com/gorilla/websocket/issues/540",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关issues"),a("OutboundLink")],1),t._v("居然已经关闭了，而且看起来说解决了。但是就现在结果而言postman以及其他websocket库都连不上来我觉得这个issues就不应该关闭，应该不会是我找到的测试工具恰好都不是rfc6455的标准实现同时恰好我没看懂rfc6455的原文吧。（甚至在postman中可以自定义websocket请求头的情况下"),a("code",[t._v("Sec-Websocket-Extensions")]),t._v("都是默认必须携带的）")]),t._v(" "),a("p",[t._v("经过这一顿折腾我换用了"),a("a",{attrs:{href:"https://github.com/gobwas/ws",target:"_blank",rel:"noopener noreferrer"}},[t._v("gobwas/ws"),a("OutboundLink")],1),t._v("，可以保证的一点就是示例代码都能直接用postman测试连接成功，还有号称零拷贝升级协议，通过"),a("code",[t._v("wsutil")]),t._v("支持底层api等功能，听起来很厉害，不过我还没有实际使用，毕竟简单api已经足够我的需求了。")]),t._v(" "),a("p",[t._v("总结一下"),a("code",[t._v("gorilla/websocket")]),t._v("我总觉得怪怪的，包括开发者对待issues的态度，已经对rfc6455的实现（主要星星还这么多）。如过同时用go做定制的服务端和客户端的话整体应该是没有问题的，但是如果希望实现rfc6455的客户端都可以正常连接，或者说希望大部分用户可以正常连接的话可能就需要换个库了。")]),t._v(" "),a("ul",[a("li",[t._v("关于websocket upgrade请求的http请求类型")])]),t._v(" "),a("p",[t._v("随便一搜就可以找到大家都是以GET请求来接upgrade的，但是没有一个人说明是为什么。")]),t._v(" "),a("p",[a("code",[t._v("gorilla/websocket")]),t._v("中"),a("a",{attrs:{href:"(https://github.com/gorilla/websocket/blob/master/server.go#L134)"}},[t._v("写的也很明确")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Upgrader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Upgrade")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" responseHeader http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" badHandshake "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"websocket: the client is not using the websocket protocol: "')]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Method "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returnError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StatusMethodNotAllowed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" badHandshake"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request method is not GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("直到我换用"),a("code",[t._v("gowas/ws")]),t._v("看"),a("a",{attrs:{href:"https://github.com/gobwas/ws/blob/master/server.go#L169",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码"),a("OutboundLink")],1),t._v("时看到：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// See https://tools.ietf.org/html/rfc6455#section-4.1")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The method of the request MUST be GET, and the HTTP version MUST be at least 1.1.")]),t._v("\n")])])]),a("p",[t._v("两行注释直接告诉了我想要看的，同时给出rfc6455相关内容，这里顺便指出。")])])}),[],!1,null,null,null);s.default=n.exports}}]);